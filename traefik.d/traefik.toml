# Web Admin — Privileged user
[http.routers.Router-SFTPGo-Web-Admin]
    entrypoints = ["websecure"]
    rule = "Host(`example.com`) && PathPrefix(`/web/admin`)"
    priority = 100
    service = "SFTPGo-Web"
    tls = true
    middlewares = [
        "bastion-hosts",
    ]
 
# API — Privileged user
[http.routers.Router-SFTPGo-API]
    entrypoints = ["websecure"]
    rule = "Host(`example.com`) && PathPrefix(`/api`)"
    priority = 100
    service = "SFTPGo-Web"
    tls = true
    middlewares = [
        "bastion-hosts",
    ]
 
# Assets
[http.routers.Router-SFTPGo-Assets]
    entrypoints = ["websecure"]
    rule = "Host(`example.com`) && PathPrefix(`/static`)"
    priority = 100
    service = "SFTPGo-Web"
    tls = true
 
# Web Client
[http.routers.Router-SFTPGo-Web-Client]
    entrypoints = ["websecure"]
    rule = "Host(`example.com`) && PathPrefix(`/web/client`)"
    priority = 100
    service = "SFTPGo-Web"
    tls = true
 
# Index
[http.routers.Router-SFTPGo-Index]
    entrypoints = ["websecure"]
    rule = "Host(`example.com`) && Method(`GET`) && Path(`/`)"
    priority = 100
    service = "SFTPGo-Web"
    tls = true
    middlewares = [
        "SFTPGo-Redirect-Index",
    ]
 
# Telemetry : Health checks — https://github.com/drakkan/sftpgo/blob/main/docs/full-configuration.md#telemetry-server
[http.routers.Router-SFTPGo-Telemetry-Health]
    entrypoints = ["websecure"]
    rule = "Host(`example.com`) && PathPrefix(`/healthz`)"
    priority = 100
    service = "SFTPGo-Telemetry"
    tls = true
    middlewares = [
        "bastion-hosts",
    ]
 
# Telemetry : Prometheus metrics — https://github.com/drakkan/sftpgo/blob/main/docs/metrics.md
[http.routers.Router-SFTPGo-Telemetry-Metrics]
    entrypoints = ["websecure"]
    rule = "Host(`example.com`) && PathPrefix(`/metrics`)"
    priority = 100
    service = "SFTPGo-Telemetry"
    tls = true
    middlewares = [
        "bastion-hosts",
    ]
 
# Telemetry : Profiling — https://github.com/drakkan/sftpgo/blob/main/docs/profiling.md
[http.routers.Router-SFTPGo-Telemetry-Profiling]
    entrypoints = ["websecure"]
    rule = "Host(`example.com`) && PathPrefix(`/debug/pprof`)"
    priority = 100
    service = "SFTPGo-Telemetry"
    tls = true
    middlewares = [
        "bastion-hosts",
    ]
 
 
# SFTP
[tcp.routers.SFTP]
    entryPoints = ["sftp"]
    rule = "HostSNI(`*`)"   # Catch every request (only available rule for non-tls routers.)
    service = "SFTPGo-SFTP"
 
# Middlewares
[http.middlewares]
 
    # Index page
    [http.middlewares.SFTPGo-Redirect-Index.redirectRegex]
        regex = ".*"
        replacement = "/web/admin"
 
# Services
 
# TCP
[tcp.services]
    [tcp.services.SFTPGo-SFTP.loadBalancer]
 
# Enable Proxy Protocol
        [tcp.services.SFTPGo-SFTP.loadBalancer.proxyProtocol]
            version = 2
 
# TCP: SFTP
        [[tcp.services.SFTPGo-SFTP.loadBalancer.servers]]
            address = "sftpgo:1111"
 
# HTTP
[http.services]
 
# HTTP: Web
    [http.services.SFTPGo-Web.loadBalancer]
        [[http.services.SFTPGo-Web.loadBalancer.servers]]
            url = "http://sftpgo:2222"
 
# HTTP: Telemetry
    [http.services.SFTPGo-Telemetry.loadBalancer]
        [[http.services.SFTPGo-Telemetry.loadBalancer.servers]]
            url = "http://sftpgo:3333"
 
# HTTP: WebDAV
    [http.services.SFTPGo-WebDAV.loadBalancer]
        [[http.services.SFTPGo-WebDAV.loadBalancer.servers]]
            url = "http://sftpgo:4444"
